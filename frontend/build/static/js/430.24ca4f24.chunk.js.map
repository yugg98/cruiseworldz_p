{"version":3,"file":"static/js/430.24ca4f24.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.1.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animateValue({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                child.animationState &&\n                    child.animationState.setActive(type, isActive);\n            });\n        }\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(AnimationType.Exit, !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.1.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.1.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","undefined","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","key","isEnabled","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","useRender","useVisualState","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","custom","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","AnimationType","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","Hover","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","Focus","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps2","Tap","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","requestAnimationFrame","onViewportEnter","InView","_this3","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","_viewport$fallback","fallback","threshold","isIntersecting","_this3$node$getProps","onViewportLeave","viewportFallback","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isNumericalString","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","push","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_slicedToArray","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","_toConsumableArray","map","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","_definition","isEasingArray","keyframes","keyframeValues","_ref$ease","times","_ref$duration","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","velocitySampleDuration","spring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","_ref$keyframes","_ref$power","power","_ref$timeConstant","timeConstant","_ref$restDelta","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","passTimestamp","animateValue","driverControls","interpolateFromNumber","_ref2$driver","driver","_ref2$elapsed","_ref2$repeat","repeat","repeatMax","_ref2$repeatType","repeatType","_ref2$repeatDelay","repeatDelay","keyframes$1","_ref2$autoplay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","_ref2$type","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","sampleDelta","createAcceleratedAnimation","valueName","_options$duration","_options$elapsed","Infinity","sampleAnimation","pregeneratedKeyframes","_element$animate","_ref$delay","_ref$repeat","_ref$repeatType","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","_transition$elapsed","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","currentAnimation","_ref$bounceStiffness","bounceStiffness","_ref$bounceDamping","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","inertia","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","_ref$transition","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","_ref4","_ref4$delay","_visualElement$makeTa","_visualElement$makeTa2","willChange","animationTypeState","getState","_ref5","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","controls","dragControls","addListeners","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","token","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isTransformDirty","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","_this$options3","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","BoundingBoxDimension","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","parseDomVariant","_objectDestructuringEmpty","resolveCSSVariables","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","object","getPrototypeOf","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}