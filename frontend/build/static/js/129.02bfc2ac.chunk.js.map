{"version":3,"file":"static/js/129.02bfc2ac.chunk.js","mappings":"0OAMMA,EAAiB,SAACC,GACtBC,QAAQC,IAAI,UAAWF,EACzB,EA8FA,UA7Fc,WACZ,IAAAG,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAM,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGT,OAFnBlB,EAASa,EAAOM,UAChBf,EAAYS,EAAOV,UACnBV,QAAQC,IAAIK,GAAOiB,EAAAE,KAAA,EACAE,EAAAA,EAAAA,KAAW,SAAU,CACtCrB,MAAAA,EACAI,SAAAA,IACC,KAAD,GAHIW,EAAIE,EAAAK,MAIDP,KAAKQ,SACZ7B,QAAQC,IAAIoB,EAAKA,MACjBS,aAAaC,QAAQ,QAAS,WAC9BC,EAAAA,GAAAA,QAAc,sBACdpB,EAAS,WAEToB,EAAAA,GAAAA,MAAY,gBACb,wBAAAT,EAAAU,OAAA,GAAAd,EAAA,KACF,gBAhBae,GAAA,OAAAnB,EAAAoB,MAAA,KAAAC,UAAA,KAiBd,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJF,EAAAA,EAAAA,MAACI,EAAAA,EAAI,CACHC,KAAK,QACLC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERE,MAAO,CACLC,SAAU,KAEZC,cAAe,CACbC,UAAU,GAEZnC,SAAUA,EACVhB,eAAgBA,EAChBoD,aAAa,MAAKX,SAAA,EAElBC,EAAAA,EAAAA,KAACC,EAAAA,EAAAA,KAAS,CACRU,MAAM,WACNT,KAAK,WACLU,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCAEXf,UAEFC,EAAAA,EAAAA,KAACe,EAAAA,EAAK,OAGRf,EAAAA,EAAAA,KAACC,EAAAA,EAAAA,KAAS,CACRU,MAAM,WACNT,KAAK,WACLU,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCAEXf,UAEFC,EAAAA,EAAAA,KAACe,EAAAA,EAAAA,SAAc,OAGjBf,EAAAA,EAAAA,KAACC,EAAAA,EAAAA,KAAS,CACRC,KAAK,WACLc,cAAc,UACdX,WAAY,CACVY,OAAQ,EACRb,KAAM,IACNL,UAEFC,EAAAA,EAAAA,KAACkB,EAAAA,EAAQ,CAAAnB,SAAC,mBAGZC,EAAAA,EAAAA,KAACC,EAAAA,EAAAA,KAAS,CACRI,WAAY,CACVY,OAAQ,EACRb,KAAM,IACNL,UAEFC,EAAAA,EAAAA,KAACmB,EAAAA,GAAM,CAACC,KAAK,UAAUC,SAAS,SAAQtB,SAAC,kBAOnD,C","sources":["Pages/Login.jsx"],"sourcesContent":["import { Button, Checkbox, Form, Input } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nconst onFinishFailed = (errorInfo) => {\r\n  console.log(\"Failed:\", errorInfo);\r\n};\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const Navigate = useNavigate();\r\n  const onFinish = async (values) => {\r\n    setEmail(values.username);\r\n    setpassword(values.password);\r\n    console.log(email);\r\n    const data = await axios.post(\"/login\", {\r\n      email,\r\n      password,\r\n    });\r\n    if (data.data.success) {\r\n      console.log(data.data);\r\n      localStorage.setItem(\"token\", \"zxcvbnm\");\r\n      toast.success(\"Login successfully\");\r\n      Navigate(\"/admin\");\r\n    } else {\r\n      toast.error(\"Login Failed\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <h2>Login</h2>\r\n      <Form\r\n        name=\"basic\"\r\n        labelCol={{\r\n          span: 8,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n        style={{\r\n          maxWidth: 600,\r\n        }}\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"remember\"\r\n          valuePropName=\"checked\"\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n"],"names":["onFinishFailed","errorInfo","console","log","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setpassword","Navigate","useNavigate","onFinish","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","data","wrap","_context","prev","next","username","axios","sent","success","localStorage","setItem","toast","stop","_x","apply","arguments","_jsxs","className","children","_jsx","Form","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","autoComplete","label","rules","required","message","Input","valuePropName","offset","Checkbox","Button","type","htmlType"],"sourceRoot":""}